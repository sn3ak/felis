"""
Django settings for felis project.

Generated by 'django-admin startproject' using Django 1.10.5.

For more information on this file, see
https://docs.djangoproject.com/en/1.10/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.10/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.10/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'This-should-be-a-really-long-string-of-characters'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['host ip here', '192.168.172.73', 'some.hostname.tld']


# Application definition

INSTALLED_APPS = [
    'django_admin_bootstrapped',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.admindocs',
    'rest_framework',
    'polymorphic',
    'picklefield',
    'django_q',
    'bootstrap3',
    'guardian',
    'selfcheck',
    'felis',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.contrib.admindocs.middleware.XViewMiddleware',
    'felis.middleware.AuthMiddleware',
    'felis.middleware.MessagingMiddleware',
]

AUTHENTICATION_BACKENDS = (
    'django.contrib.auth.backends.ModelBackend', # this is default
    'guardian.backends.ObjectPermissionBackend',
)

DAB_FIELD_RENDERER = 'django_admin_bootstrapped.renderers.BootstrapFieldRenderer'

ROOT_URLCONF = 'felis.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': ['templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'felis.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.10/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'USER': 'felis',
        'HOST': '192.168.172.72',
        'NAME': 'felis',
        'PASSWORD': 'ChangeMe@!',
    }
}


# Password validation
# https://docs.djangoproject.com/en/1.10/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.10/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.10/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = [os.path.join(BASE_DIR, 'static'), ]

BOOTSTRAP3 = {
    # The URL to the jQuery JavaScript file
    # 'jquery_url': '//code.jquery.com/jquery.min.js',
    'jquery_url': '/static/js/jquery.min.js',
    # The Bootstrap base URL
    # 'base_url': '//maxcdn.bootstrapcdn.com/bootstrap/3.3.5/',
    'base_url': '/static/',
    # The complete URL to the Bootstrap CSS file (None means derive it from base_url)
    'css_url': '/static/css/bootstrap.min.css',
    # The complete URL to the Bootstrap CSS file (None means no theme)
    'theme_url': None,
    # The complete URL to the Bootstrap JavaScript file (None means derive it from base_url)
    'javascript_url': '/static/js/bootstrap.min.js',
    # Put JavaScript in the HEAD section of the HTML document (only relevant if you use bootstrap3.html)
    'javascript_in_head': False,
    # Include jQuery with Bootstrap JavaScript (affects django-bootstrap3 template tags)
    'include_jquery': False,
    # Label class to use in horizontal forms
    'horizontal_label_class': 'col-md-3',
    # Field class to use in horizontal forms
    'horizontal_field_class': 'col-md-9',
    # Set HTML required attribute on required fields
    'set_required': True,
    # Set HTML disabled attribute on disabled fields
    'set_disabled': False,
    # Set placeholder attributes to label if no placeholder is provided
    'set_placeholder': True,
    # Class to indicate required (better to set this in your Django form)
    'required_css_class': '',
    # Class to indicate error (better to set this in your Django form)
    'error_css_class': 'has-error',
    # Class to indicate success, meaning the field has valid input (better to set this in your Django form)
    'success_css_class': 'has-success',
    # Renderers (only set these if you have studied the source and understand the inner workings)
    'formset_renderers': {
        'default': 'bootstrap3.renderers.FormsetRenderer',
    },
    'form_renderers': {
        'default': 'bootstrap3.renderers.FormRenderer',
    },
    'field_renderers': {
        'default': 'bootstrap3.renderers.FieldRenderer',
        'inline': 'bootstrap3.renderers.InlineFieldRenderer',
    },
}

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'simple': {
            'format': '%(message)s'
        },
        'verbose': {
            'format': '[%(asctime)s] %(levelname)s:  %(pathname)s %(module)s %(process)d %(thread)d %(message)s',
        },
    },
    'handlers': {
        'file': {
            'level': 'DEBUG',
            'class': 'logging.FileHandler',
            'formatter': 'verbose',
            'filename': BASE_DIR + '/felis.log',
        },
        'selfcheck': {
            'level': 'DEBUG',
            'class': 'selfcheck.loghandler.SCLogHandler',
            'formatter': 'simple',
        },
        'console': {
            'level': 'DEBUG',
            'class': 'logging.StreamHandler',
            'formatter': 'verbose',
        },
    },
    'loggers': {
        'django.request': {
            'handlers': ['file', 'selfcheck'],
            'level': 'DEBUG',
            'propagate': True,
        },
        'jsonrpc.manager': {
            'handlers': ['file', 'selfcheck'],
            'level': 'DEBUG',
            'propagate': True,
        },
        'felis.models': {
            'handlers': ['file', 'selfcheck'],
            'level': 'DEBUG',
            'propagate': True,
        },
        'felis.views': {
            'handlers': ['file', 'selfcheck'],
            'level': 'DEBUG',
            'propagate': True,
        },
        'felis.signals': {
            'handlers': ['file', 'selfcheck'],
            'level': 'DEBUG',
            'propagate': True,
        },
        'felis.tasks': {
            'handlers': ['file', 'console'],
            'level': 'DEBUG',
            'propagate': True,
        },
    },
}

CACHES = {
    "default": {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": "redis://192.168.172.8:6379/1",
        "OPTIONS": {
            "CLIENT_CLASS": "django_redis.client.DefaultClient",
        }
    },
    "sshd": {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": "redis://192.168.172.8:6379/2",
        "TIMEOUT": 86400,
        "OPTIONS": {
            "CLIENT_CLASS": "django_redis.client.DefaultClient",
        }
    },
    "auth_user": {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": "redis://192.168.172.8:6379/3",
        "TIMEOUT": 7200,
        "OPTIONS": {
            "CLIENT_CLASS": "django_redis.client.DefaultClient",
        }
    },
    "transaction": {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": "redis://192.168.172.8:6379/4",
        "TIMEOUT": None,
        "OPTIONS": {
            "MAX_ENTRIES": 10000,
            "CLIENT_CLASS": "django_redis.client.DefaultClient",
        }
    }
}

SESSION_ENGINE = "django.contrib.sessions.backends.cache"
SESSION_CACHE_ALIAS = "default"

Q_CLUSTER = {
    'name': 'felis',
    'workers': 8,
    'daemonize_workers': False,             # Set daemon flag for workers, needs to be False for be able to child spawns
    'recycle': 500,                         # Number of tasks a worker will process before recycling
    'timeout': 60,                          # Timeout for tasks, None = no timeout
    'compress': False,                      # Compress tasks in broker
    'save_limit': 1000,                     # Amount of successful tasks saved, 0 = unlimited, -1 = dont save
    'guard_cycle': 1,                       # Guard loop sleep in seconds, must be greater than 0 and less than 60.
    'sync': False,                          # Run tasks synchronously
    'queue_limit': 500,
    'cpu_affinity': 1,
    'label': 'Django Q',
    'catch_up': False,                      # Run overdued Schedule tasks when cluster gets up
    'bulk': 1,
    'scheduler': True,                      # Run scheduler
    'redis': {
        'host': '192.168.172.8',
        'port': 6379,
        'db': 0, }
}

# Directory to storing cached files such as generated jail.conf(5) files
FELIS_WORK_DIR = '/var/lib/felis/'

# Directory whre felis looking for its shell-scripts
FELIS_SCRIPTS_DIR = os.path.join(BASE_DIR, 'scripts')

# Port offset for sshd(8) sessions. Actual port = FELIS_SSHD_PORT_OFFSET + <jail instance id>
FELIS_SSHD_PORT_OFFSET = 50000
